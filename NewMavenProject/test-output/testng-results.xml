<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="7" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="89" started-at="2020-01-23T20:07:41 EST" finished-at="2020-01-23T20:07:41 EST">
    <groups>
    </groups>
    <test name="LoginTest" duration-ms="49" started-at="2020-01-23T20:07:41 EST" finished-at="2020-01-23T20:07:41 EST">
      <class name="Functionaltestcases.testcase1">
        <test-method status="PASS" signature="testDB()[pri:0, instance:Functionaltestcases.testcase1@7f13d6e]" name="testDB" is-config="true" duration-ms="8" started-at="2020-01-23T20:07:41 EST" finished-at="2020-01-23T20:07:41 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDB -->
        <test-method status="PASS" signature="launchBrowser()[pri:0, instance:Functionaltestcases.testcase1@7f13d6e]" name="launchBrowser" is-config="true" duration-ms="1" started-at="2020-01-23T20:07:41 EST" finished-at="2020-01-23T20:07:41 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowser -->
        <test-method status="PASS" signature="doLogin()[pri:1, instance:Functionaltestcases.testcase1@7f13d6e]" name="doLogin" duration-ms="5" started-at="2020-01-23T20:07:41 EST" finished-at="2020-01-23T20:07:41 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doLogin -->
        <test-method status="PASS" signature="CloseBrowser()[pri:0, instance:Functionaltestcases.testcase1@7f13d6e]" name="CloseBrowser" is-config="true" duration-ms="0" started-at="2020-01-23T20:07:41 EST" finished-at="2020-01-23T20:07:41 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseBrowser -->
        <test-method status="PASS" signature="launchBrowser()[pri:0, instance:Functionaltestcases.testcase1@7f13d6e]" name="launchBrowser" is-config="true" duration-ms="0" started-at="2020-01-23T20:07:41 EST" finished-at="2020-01-23T20:07:41 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowser -->
        <test-method status="PASS" signature="homePage()[pri:2, instance:Functionaltestcases.testcase1@7f13d6e]" name="homePage" duration-ms="2" started-at="2020-01-23T20:07:41 EST" finished-at="2020-01-23T20:07:41 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- homePage -->
        <test-method status="PASS" signature="closeDB()[pri:0, instance:Functionaltestcases.testcase1@7f13d6e]" name="closeDB" is-config="true" duration-ms="1" started-at="2020-01-23T20:07:41 EST" finished-at="2020-01-23T20:07:41 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDB -->
        <test-method status="PASS" signature="CloseBrowser()[pri:0, instance:Functionaltestcases.testcase1@7f13d6e]" name="CloseBrowser" is-config="true" duration-ms="0" started-at="2020-01-23T20:07:41 EST" finished-at="2020-01-23T20:07:41 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseBrowser -->
      </class> <!-- Functionaltestcases.testcase1 -->
    </test> <!-- LoginTest -->
    <test name="HomePageTest" duration-ms="6" started-at="2020-01-23T20:07:41 EST" finished-at="2020-01-23T20:07:41 EST">
      <class name="Functionaltestcases.testcase2">
        <test-method status="FAIL" signature="validateTitles()[pri:0, instance:Functionaltestcases.testcase2@704a52ec]" name="validateTitles" duration-ms="3" started-at="2020-01-23T20:07:41 EST" finished-at="2020-01-23T20:07:41 EST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Condition not met expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Condition not met expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at Functionaltestcases.testcase2.validateTitles(testcase2.java:15)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1182)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTitles -->
      </class> <!-- Functionaltestcases.testcase2 -->
    </test> <!-- HomePageTest -->
  </suite> <!-- Suite -->
  <suite name="Suite (0)" duration-ms="32" started-at="2020-01-23T20:07:41 EST" finished-at="2020-01-23T20:07:41 EST">
    <groups>
    </groups>
    <test name="LoginTest" duration-ms="10" started-at="2020-01-23T20:07:41 EST" finished-at="2020-01-23T20:07:41 EST">
      <class name="regressionTestCases.testcase3">
        <test-method status="PASS" signature="regressionTest1()[pri:0, instance:regressionTestCases.testcase3@458c1321]" name="regressionTest1" duration-ms="3" started-at="2020-01-23T20:07:41 EST" finished-at="2020-01-23T20:07:41 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- regressionTest1 -->
        <test-method status="PASS" signature="regressionTest2()[pri:0, instance:regressionTestCases.testcase3@458c1321]" name="regressionTest2" duration-ms="2" started-at="2020-01-23T20:07:41 EST" finished-at="2020-01-23T20:07:41 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- regressionTest2 -->
      </class> <!-- regressionTestCases.testcase3 -->
    </test> <!-- LoginTest -->
    <test name="HomePageTest" duration-ms="5" started-at="2020-01-23T20:07:41 EST" finished-at="2020-01-23T20:07:41 EST">
      <class name="regressionTestCases.testcase4">
        <test-method status="PASS" signature="regressionTest3()[pri:0, instance:regressionTestCases.testcase4@30a3107a]" name="regressionTest3" duration-ms="1" started-at="2020-01-23T20:07:41 EST" finished-at="2020-01-23T20:07:41 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- regressionTest3 -->
        <test-method status="PASS" signature="regressionTest4()[pri:0, instance:regressionTestCases.testcase4@30a3107a]" name="regressionTest4" duration-ms="1" started-at="2020-01-23T20:07:41 EST" finished-at="2020-01-23T20:07:41 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- regressionTest4 -->
      </class> <!-- regressionTestCases.testcase4 -->
    </test> <!-- HomePageTest -->
  </suite> <!-- Suite (0) -->
  <suite name="MasterSuite" duration-ms="0" started-at="2020-01-23T20:07:41 EST" finished-at="2020-01-23T20:07:41 EST">
    <groups>
    </groups>
  </suite> <!-- MasterSuite -->
</testng-results>
